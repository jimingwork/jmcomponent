/*
 * KeyValue.java
 * $Id: KeyValue.java 83 2006-04-25 14:09:06Z  $
 * Created on 2005��2��9��, ����6:22
 */

package jm.lib.common.collections.common;

import java.io.Serializable;
import java.util.Map;


/**
 *
 * @author Jiming Liu
 */

public class KeyValue<K,V> implements Map.Entry<K,V>, org.apache.commons.collections4.KeyValue<K, V>, Serializable {

    @SuppressWarnings("rawtypes")
    public static final KeyValue[] EMPTY_ARRAY = new KeyValue[0];

    /**
     *
     */
    private static final long serialVersionUID = -5630260105897320328L;


    private K key;
    private V value;

    public KeyValue() {}

    public KeyValue(K key, V value) {
        this.key = key;
        this.value = value;
    }

    /**
     *
     * @return
     */
    public K getKey(){
        return this.key;
    }

    public void setKey(K k) {
        this.key = k;
    }

    /**
     *
     * @return
     */
    public V getValue(){
        return this.value;
    }

    /**
     *
     * @param obj
     * @return the old value which is be replaced
     */
    public V setValue(V obj) {
        V v = this.value;
        this.value = obj;
        return v;
    }

    /**
     * Override hashCode.
     *
     * @return the Objects hashcode.
     */
    public int hashCode() {
        int hashCode = 104677;
        if(null!=key) hashCode = 104723 * hashCode + key.hashCode();
        if(null!=value) hashCode = 95393 * hashCode + value.hashCode();
        return hashCode;
    }

    /**
     * @generated by CodeSugar http://sourceforge.net/projects/codesugar */

    public String toString() {
        StringBuffer buffer = new StringBuffer();
        buffer.append("{KeyValue:");
        buffer.append(" key: ");
        buffer.append(key);
        buffer.append(" ,value: ");
        buffer.append(value);
        buffer.append("}");
        return buffer.toString();
    }

    /**
     * Returns <code>true</code> if this <code>KeyValue</code> is the same as the o argument.
     *
     * @return <code>true</code> if this <code>KeyValue</code> is the same as the o argument.
     */
    @SuppressWarnings("rawtypes")
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null) {
            return false;
        }
        if (o.getClass() != getClass()) {
            return false;
        }
        KeyValue castedObj = (KeyValue) o;
        return ((this.key == null ? castedObj.key == null : this.key
            .equals(castedObj.key)) && (this.value == null
            ? castedObj.value == null
            : this.value.equals(castedObj.value)));
    }

//
//    public String toJSON() {
//        StringBuilder sb = new StringBuilder();
//        this.toJSON(sb);
//        return sb.toString();
//    }
//
//    public void toJSON(StringBuilder sb) {
//        sb.append('{');
//        sb.append("key:");
//        sb.append(JsonUtil.toJSON(getKey()));
//        sb.append(",value:");
//        sb.append(JsonUtil.toJSON(getValue()));
//        sb.append('}');
//
//    }


}





